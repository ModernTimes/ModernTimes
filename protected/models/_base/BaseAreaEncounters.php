<?php

/**
 * This is the model base class for the table "{{area_encounters}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AreaEncounters".
 *
 * Columns in table "{{area_encounters}}" available as properties of the model,
 * followed by relations of table "{{area_encounters}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $areaID
 * @property integer $encounterID
 * @property string $prob
 *
 * @property Area $area
 * @property Encounter $encounter
 */
abstract class BaseAreaEncounters extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{area_encounters}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AreaEncounters|AreaEncounters', $n);
	}

	public static function representingColumn() {
		return 'prob';
	}

	public function rules() {
		return array(
			array('areaID, encounterID', 'required'),
			array('areaID, encounterID', 'numerical', 'integerOnly'=>true),
			array('prob', 'length', 'max'=>5),
			array('prob', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, areaID, encounterID, prob', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'area' => array(self::BELONGS_TO, 'Area', 'areaID'),
			'encounter' => array(self::BELONGS_TO, 'Encounter', 'encounterID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'areaID' => null,
			'encounterID' => null,
			'prob' => Yii::t('app', 'Prob'),
			'area' => null,
			'encounter' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('areaID', $this->areaID);
		$criteria->compare('encounterID', $this->encounterID);
		$criteria->compare('prob', $this->prob, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}