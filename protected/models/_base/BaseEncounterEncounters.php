<?php

/**
 * This is the model base class for the table "{{encounter_encounters}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EncounterEncounters".
 *
 * Columns in table "{{encounter_encounters}}" available as properties of the model,
 * followed by relations of table "{{encounter_encounters}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $fromEncounterID
 * @property integer $toEncounterID
 *
 * @property Encounter $toEncounter
 * @property Encounter $fromEncounter
 */
abstract class BaseEncounterEncounters extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{encounter_encounters}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EncounterEncounters|EncounterEncounters', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('fromEncounterID, toEncounterID', 'required'),
			array('fromEncounterID, toEncounterID', 'numerical', 'integerOnly'=>true),
			array('id, fromEncounterID, toEncounterID', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'toEncounter' => array(self::BELONGS_TO, 'Encounter', 'toEncounterID'),
			'fromEncounter' => array(self::BELONGS_TO, 'Encounter', 'fromEncounterID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'fromEncounterID' => null,
			'toEncounterID' => null,
			'toEncounter' => null,
			'fromEncounter' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('fromEncounterID', $this->fromEncounterID);
		$criteria->compare('toEncounterID', $this->toEncounterID);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}