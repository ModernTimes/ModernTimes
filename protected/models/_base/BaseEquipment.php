<?php

/**
 * This is the model base class for the table "{{equipment}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Equipment".
 *
 * Columns in table "{{equipment}}" available as properties of the model,
 * followed by relations of table "{{equipment}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $characterID
 * @property integer $active
 * @property integer $weapon
 * @property integer $offhand
 * @property integer $accessoryA
 * @property integer $accessoryB
 * @property integer $accessoryC
 *
 * @property Item $accessoryC0
 * @property Character $character
 * @property Item $weapon0
 * @property Item $offhand0
 * @property Item $accessoryA0
 * @property Item $accessoryB0
 */
abstract class BaseEquipment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{equipment}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Equipment|Equipments', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('characterID, active', 'required'),
			array('characterID, active, weapon, offhand, accessoryA, accessoryB, accessoryC', 'numerical', 'integerOnly'=>true),
			array('weapon, offhand, accessoryA, accessoryB, accessoryC', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, characterID, active, weapon, offhand, accessoryA, accessoryB, accessoryC', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'accessoryC0' => array(self::BELONGS_TO, 'Item', 'accessoryC'),
			'character' => array(self::BELONGS_TO, 'Character', 'characterID'),
			'weapon0' => array(self::BELONGS_TO, 'Item', 'weapon'),
			'offhand0' => array(self::BELONGS_TO, 'Item', 'offhand'),
			'accessoryA0' => array(self::BELONGS_TO, 'Item', 'accessoryA'),
			'accessoryB0' => array(self::BELONGS_TO, 'Item', 'accessoryB'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'characterID' => null,
			'active' => Yii::t('app', 'Active'),
			'weapon' => null,
			'offhand' => null,
			'accessoryA' => null,
			'accessoryB' => null,
			'accessoryC' => null,
			'accessoryC0' => null,
			'character' => null,
			'weapon0' => null,
			'offhand0' => null,
			'accessoryA0' => null,
			'accessoryB0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('characterID', $this->characterID);
		$criteria->compare('active', $this->active);
		$criteria->compare('weapon', $this->weapon);
		$criteria->compare('offhand', $this->offhand);
		$criteria->compare('accessoryA', $this->accessoryA);
		$criteria->compare('accessoryB', $this->accessoryB);
		$criteria->compare('accessoryC', $this->accessoryC);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}