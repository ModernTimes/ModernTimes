<?php

/**
 * This is the model base class for the table "{{familiar}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Familiar".
 *
 * Columns in table "{{familiar}}" available as properties of the model,
 * followed by relations of table "{{familiar}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $characterID
 * @property integer $active
 * @property integer $type
 * @property string $name
 * @property integer $level
 * @property integer $xp
 *
 * @property Character $character
 */
abstract class BaseFamiliar extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{familiar}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Familiar|Familiars', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('characterID, active, type, name, level, xp', 'required'),
			array('characterID, active, type, level, xp', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>50),
			array('id, characterID, active, type, name, level, xp', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'character' => array(self::BELONGS_TO, 'Character', 'characterID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'characterID' => null,
			'active' => Yii::t('app', 'Active'),
			'type' => Yii::t('app', 'Type'),
			'name' => Yii::t('app', 'Name'),
			'level' => Yii::t('app', 'Level'),
			'xp' => Yii::t('app', 'Xp'),
			'character' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('characterID', $this->characterID);
		$criteria->compare('active', $this->active);
		$criteria->compare('type', $this->type);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('level', $this->level);
		$criteria->compare('xp', $this->xp);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}