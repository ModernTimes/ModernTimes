<?php

/**
 * This is the model base class for the table "{{battle}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Battle".
 *
 * Columns in table "{{battle}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $type
 * @property integer $combatantAID
 * @property integer $combatantBID
 * @property string $state
 * @property string $winnerType
 * @property integer $winnerID
 * @property string $objectState
 *
 */
abstract class BaseBattle extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{battle}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Battle|Battles', $n);
	}

	public static function representingColumn() {
		return 'type';
	}

	public function rules() {
		return array(
			array('type, combatantAID, combatantBID, state, winnerType, objectState', 'required'),
			array('combatantAID, combatantBID, winnerID', 'numerical', 'integerOnly'=>true),
			array('type', 'length', 'max'=>7),
			array('state', 'length', 'max'=>11),
			array('winnerType', 'length', 'max'=>9),
			array('winnerID', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, type, combatantAID, combatantBID, state, winnerType, winnerID, objectState', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'type' => Yii::t('app', 'Type'),
			'combatantAID' => Yii::t('app', 'Combatant Aid'),
			'combatantBID' => Yii::t('app', 'Combatant Bid'),
			'state' => Yii::t('app', 'State'),
			'winnerType' => Yii::t('app', 'Winner Type'),
			'winnerID' => Yii::t('app', 'Winner'),
			'objectState' => Yii::t('app', 'Object State'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('combatantAID', $this->combatantAID);
		$criteria->compare('combatantBID', $this->combatantBID);
		$criteria->compare('state', $this->state, true);
		$criteria->compare('winnerType', $this->winnerType, true);
		$criteria->compare('winnerID', $this->winnerID);
		$criteria->compare('objectState', $this->objectState, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}