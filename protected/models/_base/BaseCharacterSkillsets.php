<?php

/**
 * Properties and related Models:
 *
 * - integer id
 * - integer characterID
 * - integer active
 * - integer pos1
 * - integer pos2
 * - integer pos3
 * - integer pos4
 * - integer pos5
 * - integer pos6
 * - integer pos7
 * - integer pos8
 * - integer pos9
 * - integer pos10
 *
 * - Skill pos100
 * - Character character
 * - Skill pos90
 * - Skill pos11
 * - Skill pos20
 * - Skill pos30
 * - Skill pos40
 * - Skill pos50
 * - Skill pos60
 * - Skill pos70
 * - Skill pos80
 * <br>
 * <p>This is the model base class for the table "{{character_skillsets}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CharacterSkillsets".</p>
 * <p>Beware: decimals and floats can show up as strings in the attribute list</p>
 *
 * @package System.Models.Base
 */
abstract class BaseCharacterSkillsets extends GxActiveRecord {

    /**
     * Factory method to get Model objects
     * @see http://www.yiiframework.com/doc/api/CModel
     * @param string $className
     * @return CModel
     */
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	/**
	 * Returns the name of the table that this model is based on
	 * @return string
	 */
	public function tableName() {
		return '{{character_skillsets}}';
	}

	/**
	 * Returns a label for this Model (singular or plural) based on $n
	 * @param int $n default 1
	 * @return string
	 */
	public static function label($n = 1) {
		return Yii::t('app', 'CharacterSkillsets|CharacterSkillsets', $n);
	}

	/**
	 * Returns a string or array of strings
	 * Not quite sure what this is for, though
	 * @return mixed
	 */
	public static function representingColumn() {
		return 'id';
	}

	/**
	 * Returns an array with rules that specify valid Model data
	 * @return array
	 */
	public function rules() {
		return array(
			array('characterID, active', 'required'),
			array('characterID, active, pos1, pos2, pos3, pos4, pos5, pos6, pos7, pos8, pos9, pos10', 'numerical', 'integerOnly'=>true),
			array('pos1, pos2, pos3, pos4, pos5, pos6, pos7, pos8, pos9, pos10', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, characterID, active, pos1, pos2, pos3, pos4, pos5, pos6, pos7, pos8, pos9, pos10', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * Returns an array of the form 
	 * "relationAttributeName" => array(BELONGS_TO|HAS_MANY, foreign Model, foreign attribute (key))
	 * @return array
	 */
	public function relations() {
		return array(
			'pos100' => array(self::BELONGS_TO, 'Skill', 'pos10'),
			'character' => array(self::BELONGS_TO, 'Character', 'characterID'),
			'pos90' => array(self::BELONGS_TO, 'Skill', 'pos9'),
			'pos11' => array(self::BELONGS_TO, 'Skill', 'pos1'),
			'pos20' => array(self::BELONGS_TO, 'Skill', 'pos2'),
			'pos30' => array(self::BELONGS_TO, 'Skill', 'pos3'),
			'pos40' => array(self::BELONGS_TO, 'Skill', 'pos4'),
			'pos50' => array(self::BELONGS_TO, 'Skill', 'pos5'),
			'pos60' => array(self::BELONGS_TO, 'Skill', 'pos6'),
			'pos70' => array(self::BELONGS_TO, 'Skill', 'pos7'),
			'pos80' => array(self::BELONGS_TO, 'Skill', 'pos8'),
		);
	}

	/**
	 * Returns an array that specifies pivotModel configurations
	 * @return array
	 */
	public function pivotModels() {
		return array(
		);
	}

	/**
	 * Returns an array with attributeLabels for the Model's attributes
	 * @return array
	 */
	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'characterID' => null,
			'active' => Yii::t('app', 'Active'),
			'pos1' => null,
			'pos2' => null,
			'pos3' => null,
			'pos4' => null,
			'pos5' => null,
			'pos6' => null,
			'pos7' => null,
			'pos8' => null,
			'pos9' => null,
			'pos10' => null,
			'pos100' => null,
			'character' => null,
			'pos90' => null,
			'pos11' => null,
			'pos20' => null,
			'pos30' => null,
			'pos40' => null,
			'pos50' => null,
			'pos60' => null,
			'pos70' => null,
			'pos80' => null,
		);
	}

	/**
	 * Returns a CActiveDataProvider, fed with search criteria based
	 * on the object's attributes
	 * @return CActiveDataProvider
	 * @link http://www.yiiframework.com/doc/api/CActiveDataProvider
	 */
	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('characterID', $this->characterID);
		$criteria->compare('active', $this->active);
		$criteria->compare('pos1', $this->pos1);
		$criteria->compare('pos2', $this->pos2);
		$criteria->compare('pos3', $this->pos3);
		$criteria->compare('pos4', $this->pos4);
		$criteria->compare('pos5', $this->pos5);
		$criteria->compare('pos6', $this->pos6);
		$criteria->compare('pos7', $this->pos7);
		$criteria->compare('pos8', $this->pos8);
		$criteria->compare('pos9', $this->pos9);
		$criteria->compare('pos10', $this->pos10);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}