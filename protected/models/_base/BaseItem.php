<?php

/**
 * This is the model base class for the table "{{item}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Item".
 *
 * Columns in table "{{item}}" available as properties of the model,
 * followed by relations of table "{{item}}" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $specialClass
 * @property string $type
 * @property string $desc
 * @property string $reqClass
 * @property integer $reqResoluteness
 * @property integer $reqWillpower
 * @property integer $reqCunning
 * @property integer $autosellCash
 * @property integer $autosellFavours
 * @property integer $autosellKudos
 * @property integer $hp
 * @property integer $hpPerc
 * @property integer $energy
 * @property integer $energyPerc
 * @property integer $resoluteness
 * @property integer $resolutenessPerc
 * @property integer $willpower
 * @property integer $willpowerPerc
 * @property integer $cunning
 * @property integer $cunningPerc
 * @property integer $dropCash
 * @property integer $dropCashPerc
 * @property integer $dropFavours
 * @property integer $dropFavoursPerc
 * @property integer $dropKudos
 * @property integer $dropKudosPerc
 * @property integer $dropItemPerc
 *
 * @property CharacterItems[] $characterItems
 * @property Equipment[] $equipments
 * @property Equipment[] $equipments1
 * @property Equipment[] $equipments2
 * @property Equipment[] $equipments3
 * @property Equipment[] $equipments4
 * @property MonsterItems[] $monsterItems
 */
abstract class BaseItem extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{item}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Item|Items', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, specialClass, desc', 'required'),
			array('reqResoluteness, reqWillpower, reqCunning, autosellCash, autosellFavours, autosellKudos, hp, hpPerc, energy, energyPerc, resoluteness, resolutenessPerc, willpower, willpowerPerc, cunning, cunningPerc, dropCash, dropCashPerc, dropFavours, dropFavoursPerc, dropKudos, dropKudosPerc, dropItemPerc', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>75),
			array('specialClass', 'length', 'max'=>50),
			array('reqClass', 'length', 'max'=>10),
			array('type', 'safe'),
			array('type, reqClass, reqResoluteness, reqWillpower, reqCunning, autosellCash, autosellFavours, autosellKudos, hp, hpPerc, energy, energyPerc, resoluteness, resolutenessPerc, willpower, willpowerPerc, cunning, cunningPerc, dropCash, dropCashPerc, dropFavours, dropFavoursPerc, dropKudos, dropKudosPerc, dropItemPerc', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, specialClass, type, desc, reqClass, reqResoluteness, reqWillpower, reqCunning, autosellCash, autosellFavours, autosellKudos, hp, hpPerc, energy, energyPerc, resoluteness, resolutenessPerc, willpower, willpowerPerc, cunning, cunningPerc, dropCash, dropCashPerc, dropFavours, dropFavoursPerc, dropKudos, dropKudosPerc, dropItemPerc', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'characterItems' => array(self::HAS_MANY, 'CharacterItems', 'itemID'),
			'equipments' => array(self::HAS_MANY, 'Equipment', 'weapon'),
			'equipments1' => array(self::HAS_MANY, 'Equipment', 'offhand'),
			'equipments2' => array(self::HAS_MANY, 'Equipment', 'accessoryA'),
			'equipments3' => array(self::HAS_MANY, 'Equipment', 'accessoryB'),
			'equipments4' => array(self::HAS_MANY, 'Equipment', 'accessoryC'),
			'monsterItems' => array(self::HAS_MANY, 'MonsterItems', 'itemID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'specialClass' => Yii::t('app', 'Special Class'),
			'type' => Yii::t('app', 'Type'),
			'desc' => Yii::t('app', 'Desc'),
			'reqClass' => Yii::t('app', 'Req Class'),
			'reqResoluteness' => Yii::t('app', 'Req Resoluteness'),
			'reqWillpower' => Yii::t('app', 'Req Willpower'),
			'reqCunning' => Yii::t('app', 'Req Cunning'),
			'autosellCash' => Yii::t('app', 'Autosell Cash'),
			'autosellFavours' => Yii::t('app', 'Autosell Favours'),
			'autosellKudos' => Yii::t('app', 'Autosell Kudos'),
			'hp' => Yii::t('app', 'Hp'),
			'hpPerc' => Yii::t('app', 'Hp Perc'),
			'energy' => Yii::t('app', 'Energy'),
			'energyPerc' => Yii::t('app', 'Energy Perc'),
			'resoluteness' => Yii::t('app', 'Resoluteness'),
			'resolutenessPerc' => Yii::t('app', 'Resoluteness Perc'),
			'willpower' => Yii::t('app', 'Willpower'),
			'willpowerPerc' => Yii::t('app', 'Willpower Perc'),
			'cunning' => Yii::t('app', 'Cunning'),
			'cunningPerc' => Yii::t('app', 'Cunning Perc'),
			'dropCash' => Yii::t('app', 'Drop Cash'),
			'dropCashPerc' => Yii::t('app', 'Drop Cash Perc'),
			'dropFavours' => Yii::t('app', 'Drop Favours'),
			'dropFavoursPerc' => Yii::t('app', 'Drop Favours Perc'),
			'dropKudos' => Yii::t('app', 'Drop Kudos'),
			'dropKudosPerc' => Yii::t('app', 'Drop Kudos Perc'),
			'dropItemPerc' => Yii::t('app', 'Drop Item Perc'),
			'characterItems' => null,
			'equipments' => null,
			'equipments1' => null,
			'equipments2' => null,
			'equipments3' => null,
			'equipments4' => null,
			'monsterItems' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('specialClass', $this->specialClass, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('desc', $this->desc, true);
		$criteria->compare('reqClass', $this->reqClass, true);
		$criteria->compare('reqResoluteness', $this->reqResoluteness);
		$criteria->compare('reqWillpower', $this->reqWillpower);
		$criteria->compare('reqCunning', $this->reqCunning);
		$criteria->compare('autosellCash', $this->autosellCash);
		$criteria->compare('autosellFavours', $this->autosellFavours);
		$criteria->compare('autosellKudos', $this->autosellKudos);
		$criteria->compare('hp', $this->hp);
		$criteria->compare('hpPerc', $this->hpPerc);
		$criteria->compare('energy', $this->energy);
		$criteria->compare('energyPerc', $this->energyPerc);
		$criteria->compare('resoluteness', $this->resoluteness);
		$criteria->compare('resolutenessPerc', $this->resolutenessPerc);
		$criteria->compare('willpower', $this->willpower);
		$criteria->compare('willpowerPerc', $this->willpowerPerc);
		$criteria->compare('cunning', $this->cunning);
		$criteria->compare('cunningPerc', $this->cunningPerc);
		$criteria->compare('dropCash', $this->dropCash);
		$criteria->compare('dropCashPerc', $this->dropCashPerc);
		$criteria->compare('dropFavours', $this->dropFavours);
		$criteria->compare('dropFavoursPerc', $this->dropFavoursPerc);
		$criteria->compare('dropKudos', $this->dropKudos);
		$criteria->compare('dropKudosPerc', $this->dropKudosPerc);
		$criteria->compare('dropItemPerc', $this->dropItemPerc);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}