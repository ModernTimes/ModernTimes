<?php

/**
 * This is the model base class for the table "{{charactermodifier}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Charactermodifier".
 *
 * Columns in table "{{charactermodifier}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $hp
 * @property integer $hpPerc
 * @property integer $energy
 * @property integer $energyPerc
 * @property integer $resoluteness
 * @property integer $resolutenessPerc
 * @property integer $willpower
 * @property integer $willpowerPerc
 * @property integer $cunning
 * @property integer $cunningPerc
 * @property integer $dropCash
 * @property integer $dropCashPerc
 * @property integer $dropFavours
 * @property integer $dropFavoursPerc
 * @property integer $dropKudos
 * @property integer $dropKudosPerc
 * @property integer $dropItemPerc
 *
 */
abstract class BaseCharactermodifier extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{charactermodifier}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Charactermodifier|Charactermodifiers', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('hp, hpPerc, energy, energyPerc, resoluteness, resolutenessPerc, willpower, willpowerPerc, cunning, cunningPerc, dropCash, dropCashPerc, dropFavours, dropFavoursPerc, dropKudos, dropKudosPerc, dropItemPerc', 'numerical', 'integerOnly'=>true),
			array('hp, hpPerc, energy, energyPerc, resoluteness, resolutenessPerc, willpower, willpowerPerc, cunning, cunningPerc, dropCash, dropCashPerc, dropFavours, dropFavoursPerc, dropKudos, dropKudosPerc, dropItemPerc', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, hp, hpPerc, energy, energyPerc, resoluteness, resolutenessPerc, willpower, willpowerPerc, cunning, cunningPerc, dropCash, dropCashPerc, dropFavours, dropFavoursPerc, dropKudos, dropKudosPerc, dropItemPerc', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'hp' => Yii::t('app', 'Hp'),
			'hpPerc' => Yii::t('app', 'Hp Perc'),
			'energy' => Yii::t('app', 'Energy'),
			'energyPerc' => Yii::t('app', 'Energy Perc'),
			'resoluteness' => Yii::t('app', 'Resoluteness'),
			'resolutenessPerc' => Yii::t('app', 'Resoluteness Perc'),
			'willpower' => Yii::t('app', 'Willpower'),
			'willpowerPerc' => Yii::t('app', 'Willpower Perc'),
			'cunning' => Yii::t('app', 'Cunning'),
			'cunningPerc' => Yii::t('app', 'Cunning Perc'),
			'dropCash' => Yii::t('app', 'Drop Cash'),
			'dropCashPerc' => Yii::t('app', 'Drop Cash Perc'),
			'dropFavours' => Yii::t('app', 'Drop Favours'),
			'dropFavoursPerc' => Yii::t('app', 'Drop Favours Perc'),
			'dropKudos' => Yii::t('app', 'Drop Kudos'),
			'dropKudosPerc' => Yii::t('app', 'Drop Kudos Perc'),
			'dropItemPerc' => Yii::t('app', 'Drop Item Perc'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('hp', $this->hp);
		$criteria->compare('hpPerc', $this->hpPerc);
		$criteria->compare('energy', $this->energy);
		$criteria->compare('energyPerc', $this->energyPerc);
		$criteria->compare('resoluteness', $this->resoluteness);
		$criteria->compare('resolutenessPerc', $this->resolutenessPerc);
		$criteria->compare('willpower', $this->willpower);
		$criteria->compare('willpowerPerc', $this->willpowerPerc);
		$criteria->compare('cunning', $this->cunning);
		$criteria->compare('cunningPerc', $this->cunningPerc);
		$criteria->compare('dropCash', $this->dropCash);
		$criteria->compare('dropCashPerc', $this->dropCashPerc);
		$criteria->compare('dropFavours', $this->dropFavours);
		$criteria->compare('dropFavoursPerc', $this->dropFavoursPerc);
		$criteria->compare('dropKudos', $this->dropKudos);
		$criteria->compare('dropKudosPerc', $this->dropKudosPerc);
		$criteria->compare('dropItemPerc', $this->dropItemPerc);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}