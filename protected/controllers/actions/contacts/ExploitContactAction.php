<?php
/**
 * Exploits a contact in a given way.
 * 
 * @uses Favor
 * @package Actions.Contacts
 */

class ExploitContactAction extends CAction {

    /**
     * See above
     * @uses Favor->resolve
     * @uses Favor->meetsRequirements
     */
    public function run($favorID, $charactercontactID) {
        // positive integers
        $validSyntax = (!empty($charactercontactID)
                        // are all characters digits? rules out decimal numbers
                        && ctype_digit($charactercontactID)
                        && $charactercontactID > 0
                        && !empty($favorID)
                        && ctype_digit($favorID)
                        && $favorID > 0);
        if(!$validSyntax) {
            EUserFlash::setErrorMessage("Something went wrong. Shit happens.");
            $this->controller->redirect(array("contacts"));
        }
        
        // Does CharacterContact belong to Character?
        $Character = CD();
        $CharacterContact = CharacterContacts::model()->findByPk($charactercontactID);
        if($CharacterContact->characterID != $Character->id) {
            EUserFlash::setErrorMessage($CharacterContact->name . " does not belong to you.");
            $this->controller->redirect(array("contacts"));
        }
        
        // Is CharacterContact treated?
        if(!$CharacterContact->isTreated()) {
            EUserFlash::setErrorMessage($CharacterContact->name . " can't be exploited yet");
            $this->controller->redirect(array("contact", "charactercontactID" => $charactercontactID));
        }
        
        // Does the favor exist?
        $Favor = Favor::model()->findByPk($favorID);
        if(!is_a($Favor, "Favor")) {
            EUserFlash::setErrorMessage("Something went wrong. Shit happens.");
            $this->controller->redirect(array("contact", "charactercontactID" => $charactercontactID));
        }
        
        // If no general favor: has to be in contact's list of possible favors
        if(!$Favor->generalFavor) {
            // @todo 
        }
        
        /**
         * Does the character and the contact meet the requirements for the 
         * favor?
         */
        if(!$Favor->call("meetsRequirements", $Character, $CharacterContact)) {
            $this->controller->redirect(array("contact", "charactercontactID" => $charactercontactID));
        }
        
        /**
         * BEWARE: Actual business logic 
         */
        $transaction = Yii::app()->tools->getTransaction();
        try {
            
            $Favor->call("resolve", $Character, $CharacterContact);
            $transaction->commit();
            $this->controller->redirect(array("contacts"));
        } catch(Exception $e) {
            $transaction->rollback();
            dd($e->getMessage());
            EUserFlash::setErrorMessage("Weird database shit happened.");
            $this->controller->redirect(array("contact", "charactercontactID" => $charactercontactID));
        }
        
    }
}